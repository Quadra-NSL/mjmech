Missing frame detection:
 - videorate is no good
 - appsink followed by appsrc
 - imagefreeze/appsrc followed by input-selector or funnel
 - videomixer -- if it emits frame on any imput, provides both OSD and missing
                 frames together.
 - "watchdog" element detects pauses. Not sure how useful it is.

========================================
Overlays
note: the current pipeline (from avdec_h264 to xvimageisnk) negotiates to I420.
Introducing plugins which operate in RGB only will add extra conversion costs
(which may be OK, as this runs on controlling laptop)
 - I420 has separate Y, Pr, Pb planes. For monochrome/grayscale overlay, we may
   be able to operate on the

Plugin: cairooverlay
   gets a callback on every frame, can draw using Cairo functions
   works in RGBA space only
   http://www.jonnor.com/2011/03/cairooverlay-generic-cairo-overlay-element-for-gstreamer/

Plugin: textoverlay (from pango)
   takes a pango markup text -- not clear how the text is positioned
   claims to work in any pixel format

Plugin: gdkpixbufoverlay
   takes a gdk-supported image (from file only?) and overlays
   claims to work in any pixel format

Plugin: rsvgoverlay
   renders SVG on an image. Re-renders every frame -- slow when many images
   works in BGRA only

Plugin: videomixer
   mixes two images together.
   use with appsrc to produce overlay omage
   claims to work in any pixel format

API: gstvideooverlaycomposition
   uses gst_video_overlay_composition to attach overlay images to video frames.
   Some unspecified component (xvimagesink?) then actually renders them
   used by gdkpixbufoverlay

Custom plugin: OpenCV-based, based on opencvtextoverlay
   works in RGBA space only

Custom plugin: pango-based, based on gsttextrenderer
   maybe just copy the cairo->video_overlay conversion code from there?

========================================
Misc TODO:
- video frame logging (Rx/Tx size) with position in .mkv/.mp4 file
  (for precise replays)
- multicast routing -- so we can receive with openwrt
  - 'mrouted' does DVMRP, which is 'implicit join'/'flood and prune'
   - 'pruning off' may be helpful
   - so does increasing cache_lifetime
  - 'smcroute' does static routes
  - maybe 'ip mrule' works now?

========================================
Network namespaces:
 - man setns(2) describes how to get ns from fd
 - pyroute2 seems to implement lots of these operations in python
  - uses separate process in different netspace, communicates with that
 - go implementation of 'socketat' moves temporarily into target namespace
   https://github.com/coreos/go-namespaces/blob/master/net/net.go
 - LWN described 'socketat' in 2010, but it is not in current kernel:
   - https://lwn.net/Articles/407495/
   - probably did not go in because we could temporary move there instead
   - comments say "socketat was dropped... it can be implemented race-free in
     userspace"

Completely alternative approach: "namespace keeper"
 - create a special "namespace keeper" process
 - the only process which needs root access
 - namespace is not mount-binded -- only exists while keeper is alive
 - keeper accepts commands over UDP socket:
  - "execute command inside as root" -- caller must be root
  - "configure network" -- run "ip" or "iw" command inside
   - must carefully sanitize args
  - "grab / release network device into this namespace"
  - "forward tcp/udp port to the outside"
  - "create a socket and pass it to me" (via SOCK_UNIX)
