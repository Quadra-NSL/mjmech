 * tune controller to have less long-term catchup effect

 * gimbal close loop using absolute encoders
 * do pitch encoder too

 * provide a mechanism to re-initialize the gyro with arbitrary time
 * all faults should clear when torque is set off
   * there is no way to clear the AHRS rate fault
   * uart stream rx_overflow needs to flag an error that I can see

 * provide a software command to restart things
 * add version number or date to image somehow
 * disconnecting the debugging USB cable seems to hose the controller

 * gimbal control software
   * when we are limiting the target due to max_slew, the target
     body_dps should be non-zero?  More likely it should have an accel
     and decel profile of some sort.
   * using the PIMU on i2c3 appears to be flaky, but i2c1 works just
     fine
   * wire up motor fault signals

 * make UI for debugging
   * becomes unusable with large trees open
   * record tlog files
   * easy to reach button for torque off

 * fire control
   * wire up AEG fault signal

 * get watchdog working

 * I was able to lock up the I2C bus by resetting the controller
   with st-util


 * r2 defects
   * alignment pins for ARM switch don't match
     * spacing is 7.2 instead of the required 6.8
   * programming header has scrambled pin order
   * usb connector didn't have front alignment pins soldered

 * r1 defects
   * STM32 footprint is too small! :(
   * MOTOR1_EN and MOTOR2_EN aren't connected to anything!
   * BLDC_FAULT2 isn't connected to anything!
   * ARM switch selection (both digikey and MF), don't match footprint
   * USBO connector has correct DPN, but had wrong MPN transcribed to MF
   * some of the capacitors have silkscreens in the wrong place
     * C24/25 C22/23
   * right angle JST header has rear flanges that extend beyond its
     silkscreen
   * silk letter labels on weapon 8 pin connector don't match reality

 * BOM
   * power in + serial connector
   * +12V boost - TPS55330
   * down buck for uC - TPS62172 (3.3V)
   * yaw absolute encoder - AS5048B
   * connector for remote pitch absolute encoder (AS5048B)
   * connector for two BMI 160 IMUs
   * 2x DRV8313 BLDC drivers
   * 2x connectors for brushless motor
   * micro USB connector for diagnostics - 609-4618-1-ND
   * USB in connector
   * USB out connector for camera
   * programming connector
   * fire control
    * MC33926 Freescale
    * macrofab house mosfet for laser
   * processor STM32F411CEU6
   * some switch or button for arming?  maybe a soft switch?
   * indicator for armed
   * indicator for general power
   * indicator for status
   * indicator for serial comms

 * mounted on gimbal platform immediately above yaw motor
 * 3D printed gimbal is missing center holes for both the swivel hub
   and the gimbal motor
 * 3D printed gimbal is a little more flexible than is desired in
   several axes

DONE 2016-01-30
 * jumping when firing was caused by mounting the IMU to the weapon
   plate... mounting it to the camera had no problem.  it looked like
   there were rates at > 800Hz or 1000dps on the plate, but the camera
   is sufficiently isolated that it isn't a problem

DONE 2016-01-29
 * turret became disabled while operating... probably need graduated
   disabling backoff, not 60s on first failure

DONE 2016-01-28
 * when gait engine is running, the herkulex traffic overloads the CPU
   and prevents even 400hz operation
   * various optimizations fixed this
 * suitable commands from the mech_warfare process can get it to warp
   past the absolute yaw limit
   * unwrapping yaw fixed this
 * provide herkulex mechanism to read absolute yaw
 * provide herkulex mechanism to position based on absolute yaw
 * implement herkulex rate commands
 * make rate commands limited to configured slew rate

DONE 2016-01-25
 * for some reason, gimbal rate commands from mw_command have the
   opposite sign when run through the whole system
 * limited according to absolute yaw angle
 * tview
   * after dragging or zooming plot, need a way to get auto-scrolling
     working again
   * would be really nice to be able to drag the axes independently


DONE 2016-01-24
 * persistent config for the gimbal didn't seem to be persisting,
   although things for the imu were
 * make LED flash when enable signal sensed
 * made another LED show torque status
 * gimbal shouldn't fault when torque is not on
 * setting gimbal torque to off should cause it to re-initialize
 * connect up fire control to herkulex protocol


DONE 2016-01-23
 * starting bringing up r2
   * no power shorts
   * applying power works
   * discovered programming connector has crazy pinout
     1. VESC seems to use a different PH pinout convention than me
     2. I also just screwed up the pinout for the JST-PH6
   * programming STM32 works
   * debugging USB port works
   * the primary encoder seems to work
   * the primary IMU works on i2c1, but not i2c3... or rather it
     works for a short while, but then wedges in an error state that
     isn't reported properly
   * serial herkulex protocol works
   * the weapon output works, fires the AEG, drives the agitator and
     laser
   * the boost regulator works
   * each drv8313 works


DONE 2015-12-21
 * add configurable mounting orientation for each IMU
 * tview
   * restore debugging state when device restarts, or just a button
     to restart things
   * be able to pause plotting

DONE 2015-12-20
 * r2
   * make cubemx config for desired pinout
   * ensure I can configure all pins properly
   * initial silk placement
   * autoroute
   * final silk placement

DONE 2015-12-19
 * r1 bringup
   * AS5048A
 * r2
   * switch TP names to be something usable
   * update weapon header silk labels
   * mounted in gimbal frame, works acceptably, although as expected
     the pitch down angle is limited by interference with the
     board... an updated bracket could put the entire weapon up a bit,
     which would remove this limitation.  As is, it can still probably
     look low enough to be workable.

DONE 2015-12-18
 * r1 bringup
   * DRV8313 driver
   * laser control
   * MC33926 fire control driver

DONE 2015-12-17
 * r1 bringup
   * 3.3v converter
   * 12v boost converter
 * r2 fixes
   * selected correct digikey part number for ARM switch
   * added rear flanges on RA JST PH connector
   * adjusted silks to be clear with current layout
   * connected up BLDC_EN (the formerly unconnected MOTOR1_EN and
     MOTOR2_EN)
   * found that BLDC_FAULT2 wasn't properly connected in schematic

DONE 2015-12-15
 * connect up herkulex protocol
 * no obvious low-hanging fruit for improving main loop speed
 * I2C "works" above 400kHz, but on discovery board, error rates are
   too high to be usable... this limits IMU to 800Hz.

DONE 2015-12-14
 * tview
   * real-time line plots of arbitrary values
   * plot on either left or right axis
   * copy paste values from the telemetry tree
 * initialize the AHRS with the accelerometer rather than making it
   slew there
 * would be nice to have a warning if the IMU isn't emitting data at
   the rate we expect
 * report current heap size in system_info
 * allow things which register with PersistentConfig to get notified
   when their config changes for explicit live updating
 * switch serial ports to put debugging on USB and herkulex on UART


DONE 2015-12-13
 * actually made I2C robust by getting bus reset procedure to work
 * tview
   * got serial console and telemetry tree working
   * tree view for configuration
   * more appropriate default size for overall window, and for
     columns in tree view

DONE 2015-12-12
 * make I2C more robust... jiggle connections and ensure it keeps
   working, although it should log errors somehow
   * ARLO can trigger spuriously, need to be able to clear error and
     have bmi160 driver try again in this case

DONE 2015-12-11
 * began work on debugging UI

DONE 2015-12-10
 * first, do a basic version just like the open-loop brugi
 * make commands to set target
 * make rate commands work

DONE 2015-12-09
 * Got simple VRU working

DONE 2015-12-08
 * make STM32 flash interface actually write to flash
 * Make UART be able to tri-state when not transmitting

DONE 2015-12-07
 * read from the ADC
 * implemented herkulex protocol
 * get PWM working

DONE 2015-12-06
 * read and write from the SPI bus
 * sent off BMI160 module to macrofab

DONE 2015-12-05
 * usb_cdc_stream needs to do less work in interrupt context
 * test out BMI160 driver
 * drew up BMI160 breakout boar
 * Simple allan variance measurement of BMI160
    * ARW 0.7 deg/sqrt(hr)
    * bias drift: 8 deg/hr
   * commission raw I2C driver
 * implemented error recovery in CommandManager

DONE 2015-12-02
 * got tserial.py basically working, along with fixing a bunch of bugs
   in the online code
 * drafted raw I2C driver

DONE 2015-12-01
 * basic main loop
   * persistent configuration and protocol
   * live streaming of data structures for debugging over USB

DONE 2015-11-30
 * Got DMA backed I2C working

DONE 2015-11-28
 * read and write to the primary UART
 * get USB CDC device working

DONE 2015-11-27
 * strip out C++ library stuff from image

DONE 2015-11-26
 * Got LED blinking on discovery board

DONE 2015-11-19
 * basic SCons build system in place

DONE 2015-11-16
 * macrofab order placed

DONE 2015-11-15
 * route larger width 3.3V supply around to where it is used
 * add decoupling caps for 3.3V supply on external I2C connectors
 * Route power
 * silks for signals on weap connector
 * autoroute remainder
 * fix up silks to not be on vias

DONE 2015-11-11
 * add test points for various voltage rails
 * arranged all silk labels
 * Clean up placement and ensure alignment where we can
 * Normalize fonts on silk screen
   * Remove values from silk screen
 * Add silk board description and labels
 * verify package sizes and part values against part numbers

DONE 2015-11-09
 * Label all ICs and parts with useful names
 * Re-organized schematic... maybe it could be kind of considered
   organized now?
 * select all parts

DONE 2015-11-08
 * verified macrofab FET will work at 3.3V
 * add I2C pullup resistors (plan on high speed operation)
 * make sure AS50448A has chip select line hooked up somewhere
   useful
 * do I need more ground vias under 12V boost regulator

DONE 2015-11-07
 * Initial work on board layout and schematic capture
 * Add switch for arming weapon
 * Added indicator LEDs
 * Update all resistors and caps to the MF passive library
