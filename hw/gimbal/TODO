 * Board + Software
   * driver for AS5048 (test existing driver)

   * gimbal control software
     * connect up herkulex protocol
     * close loop using absolute encoders
     * add support for second IMU

   * make I2C more robust... jiggle connections and ensure it keeps
     working, although it should log errors somehow
     * ARLO can trigger spuriously, need to be able to clear error and
       have bmi160 driver try again in this case

   * make UI for debugging
     * window with serial terminal
     * tree view for configuration
     * tree view for telemetry
     * real-time line plots of arbitrary values
     * maybe special pages to pull out specific config or telemetry
      values

   * initialize the AHRS with the accelerometer rather than making it
     slew there
   * would be nice to have a warning if the IMU isn't emitting data at
     the rate we expect

   * error handling and reporting

   * get watchdog working

   * make I2C rates above 400kHz work

   * wishlist
     * get I2C DMA working
     * report current heap size in system_info
     * allow things which register with PersistentConfig to get notified
       when their config changes for explicit live updating
     * make text command handling more generic, so that "help" could be
       implemented across all sub-modules
     * Make TelemetryManager support schema objects of arbitrary size
       using a custom stream which only emits a subset and doing the
       whole visitation multiple times.
       * (note, not binary objects, as that could result in "tearing" of
         the structures)


 * r1 defects
   * STM32 footprint is too small! :(
   * something is messed up about the ARM switch footprint or part
   * something is messed up with USB connector footprint
   * some of the capacitors have silkscreens in the wrong place?
     C24/25 C22/23

 * BOM
   * power in + serial connector
   * +12V boost - TPS55330
   * down buck for uC - TPS62172 (3.3V)
   * yaw absolute encoder - AS5048B
   * connector for remote pitch absolute encoder (AS5048B)
   * connector for two BMI 160 IMUs
   * 2x DRV8313 BLDC drivers
   * 2x connectors for brushless motor
   * micro USB connector for diagnostics - 609-4618-1-ND
   * USB in connector
   * USB out connector for camera
   * programming connector
   * fire control
    * MC33926 Freescale
    * macrofab house mosfet for laser
   * processor STM32F411CEU6
   * some switch or button for arming?  maybe a soft switch?
   * indicator for armed
   * indicator for general power
   * indicator for status
   * indicator for serial comms

 * mounted on gimbal platform immediately above yaw motor
 * Make the yaw measurement actually compensated for pitch properly
   * only worth doing once I re-write it all to use quaternions
 * 3D printed gimbal is missing center holes for both the swivel hub
   and the gimbal motor
 * 3D printed gimbal is a little more flexible than is desired in
   several axes

DONE 2015-12-10
 * first, do a basic version just like the open-loop brugi
 * make commands to set target
 * make rate commands work

DONE 2015-12-09
 * Got simple VRU working

DONE 2015-12-08
 * make STM32 flash interface actually write to flash
 * Make UART be able to tri-state when not transmitting

DONE 2015-12-07
 * read from the ADC
 * implemented herkulex protocol
 * get PWM working

DONE 2015-12-06
 * read and write from the SPI bus
 * sent off BMI160 module to macrofab

DONE 2015-12-05
 * usb_cdc_stream needs to do less work in interrupt context
 * test out BMI160 driver
 * drew up BMI160 breakout boar
 * Simple allan variance measurement of BMI160
    * ARW 0.7 deg/sqrt(hr)
    * bias drift: 8 deg/hr
   * commission raw I2C driver
 * implemented error recovery in CommandManager

DONE 2015-12-02
 * got tserial.py basically working, along with fixing a bunch of bugs
   in the online code
 * drafted raw I2C driver

DONE 2015-12-01
 * basic main loop
   * persistent configuration and protocol
   * live streaming of data structures for debugging over USB

DONE 2015-11-30
 * Got DMA backed I2C working

DONE 2015-11-28
 * read and write to the primary UART
 * get USB CDC device working

DONE 2015-11-27
 * strip out C++ library stuff from image

DONE 2015-11-26
 * Got LED blinking on discovery board

DONE 2015-11-19
 * basic SCons build system in place

DONE 2015-11-16
 * macrofab order placed

DONE 2015-11-15
 * route larger width 3.3V supply around to where it is used
 * add decoupling caps for 3.3V supply on external I2C connectors
 * Route power
 * silks for signals on weap connector
 * autoroute remainder
 * fix up silks to not be on vias

DONE 2015-11-11
 * add test points for various voltage rails
 * arranged all silk labels
 * Clean up placement and ensure alignment where we can
 * Normalize fonts on silk screen
   * Remove values from silk screen
 * Add silk board description and labels
 * verify package sizes and part values against part numbers

DONE 2015-11-09
 * Label all ICs and parts with useful names
 * Re-organized schematic... maybe it could be kind of considered
   organized now?
 * select all parts

DONE 2015-11-08
 * verified macrofab FET will work at 3.3V
 * add I2C pullup resistors (plan on high speed operation)
 * make sure AS50448A has chip select line hooked up somewhere
   useful
 * do I need more ground vias under 12V boost regulator

DONE 2015-11-07
 * Initial work on board layout and schematic capture
 * Add switch for arming weapon
 * Added indicator LEDs
 * Update all resistors and caps to the MF passive library
